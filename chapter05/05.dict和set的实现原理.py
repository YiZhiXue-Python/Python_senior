
"""
1. 计算键的散列值
2. 使用散列值的一部分来定位散列表中的一个表元
3. 判断表元是否为空
    (是) 抛出异常KeyError
    (否) 判断键相等      (散列冲突问题)
        (是) 返回表元的值
        (否) 使用散列值的另一部分来定位散列表的另一行  (重复第三步)

"""

# 1. dict的key 和 set 的值 必须是可以hash的
#    不可变对象都是可hash的str frozenset, tuple 自己实现的类 __hash__
# 2. dict的内存花销大,但是查询速度快, 自定义对象 或者 Python内部的对象都是dict包装的
# 3. dict的存储顺序和元素添加顺序有关
# 4. 添加数据有可能改变已有数据的顺序
